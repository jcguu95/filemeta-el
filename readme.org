* filemeta-el

This elisp program aims to help users add notes to their files.

Each regular file has a =md5= hash. This program helps attach lisp
objects to that hash. When the regular file moves without
changing its content, the attachment stays.

To get started, initiate =filemeta= in your favorite directory. It
creates =.filemeta= as =git= creates =.git=. All data go under
=.filemeta=. As shown below, each hash has a file that stores a
lisp list.

#+begin_src
$ cat ./.filemeta/d41d8cd98f00b204e9800998ecf8427e/.db.el

(:tag (t1 t2 ..)
 :history (h1 h2 ..)
 :custom-1 (u11 u12 ..)
 :custom-2 (u21 u22 ..)
 :.. ..)
#+end_src

Check out =#'filemeta:dired-marked-files-+tag= as an example to see
how to quickly tag files.

* todo lists

+ [ ] Version control everything in the database.
+ [ ] Multi-select with =ivy=, possible?
+ [ ] Syntactically abstract with macros +tag/-tag/fetch-tag..
  etc, for the users to write functions for their own slots
  easily.
+ [ ] Attachment editor: use lens/comonads, #'rm-attachment,
  #'cp-attachment.
+ [ ] Add a license.. which one?
+ [ ] Think of a better way to =update-file-history!=.

** another tag adding work flow?

Sometimes I find it easier to batch add tags like the following.
Abstract it for the users.

#+begin_src elisp
(let ((lst '(("file1" "tag1 tag2")
             ("file2" "tag3 tag4"))))
  (loop for file in (f-files "~/data/storage/recordings")
        do (loop for tag in  (mapcar #'intern
                                     (alist-get (f-base file)
                                                lst nil nil #'string=))
                 do (progn (filemeta:update-file-history! file)
                           (filemeta:+tag! tag file)))))
#+end_src

** adding tags is very slow

Could it be that it compute the hash every time for EACH tag? Fix
this by remembering the last time the file is known to changed,
and only check the hash if the time is different.

** async process, and print progress

The run above took me 10 minutes, and it freezes emacs without
letting me know how much it has done.

* functions

+ [X] root<-file
+ [X] rel-path<-file
+ [X] hash<-file
+ [X] +tag!, -tag!
+ [X] update-file-history!
+ [X] attachment<-file
+ [X] tags-in-repo
+ [X] dired-marked-files-+tag, dired-marked-files--tag
+ [ ] search-relative-path
